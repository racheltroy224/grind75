//this solutions runtime was 7 ms beat 82.11% of previous attempts on leetcode
//this solutions memory was 21.14 MB which beat 27.67% of previous attempts on leetcode (need to come back and optimize)

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isBalanced(TreeNode* root) {
        
        if(root == NULL){
            return true;
        }

        int heightL = height(root->left);
        int heightR = height(root->right);

        if((abs(heightL - heightR)) <= 1 && isBalanced(root->right) && isBalanced(root->left)) {
            return true;
        } 
        
        return false;
    }

    int height(TreeNode* node) {
        if(node == NULL) {
            return 0;
        }

        return 1 + max(height(node->left), height(node->right));
    }
};
